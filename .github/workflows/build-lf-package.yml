name: Build Littelfuse Open WebUI Package

on:
  push:
    branches: [ main, lf-custom ]
    tags: [ 'lf-v*' ]
  workflow_dispatch:
    inputs:
      version_suffix:
        description: 'Version suffix (e.g., "dev", "test")'
        required: false
        default: ''

jobs:
  build-wheel:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: 'requirements*.txt'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build hatchling
        npm ci --force
    
    - name: Build package
      run: python -m build
    
    - name: Get package version
      id: get_version
      run: |
        VERSION=$(python -c "import json; print(json.load(open('package.json'))['version'])")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Package version: $VERSION"
    
    - name: Upload wheel artifact
      uses: actions/upload-artifact@v4
      with:
        name: open-webui-lf-${{ steps.get_version.outputs.version }}-wheel
        path: dist/*.whl
        retention-days: 30
    
    - name: Upload source distribution
      uses: actions/upload-artifact@v4
      with:
        name: open-webui-lf-${{ steps.get_version.outputs.version }}-sdist
        path: dist/*.tar.gz
        retention-days: 30

  build-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - name: open-webui
            dockerfile: Dockerfile
            image-suffix: -lf
            context: .
          - name: extloader
            dockerfile: Dockerfile.extloader
            image-suffix: -extloader
            context: .
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=moby/buildkit:v0.12.0
          network=host
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}${{ matrix.image-suffix }}
        tags: |
          type=ref,event=branch
          type=ref,event=tag,prefix=lf-
          type=semver,pattern={{version}},prefix=lf-v
          type=raw,value=lf-latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.context }}
        file: ${{ matrix.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # FIXED: Removed mode=max which was causing 400 errors
        cache-from: type=gha,scope=${{ matrix.name }}
        cache-to: type=gha,scope=${{ matrix.name }}
        platforms: linux/amd64
        build-args: |
          BUILD_HASH=${{ github.sha }}
          BUILDKIT_INLINE_CACHE=1

  create-release:
    needs: [build-wheel, build-docker]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/lf-v')
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: open-webui-lf-*
        merge-multiple: true
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          *.whl
          *.tar.gz
        name: "Littelfuse Open WebUI ${{ needs.build-wheel.outputs.version }}"
        body: |
          Custom Littelfuse build of Open WebUI version ${{ needs.build-wheel.outputs.version }}
          
          ## Docker Images
          - `ghcr.io/${{ github.repository }}-lf:lf-${{ needs.build-wheel.outputs.version }}`
          - `ghcr.io/${{ github.repository }}-extloader:lf-${{ needs.build-wheel.outputs.version }}`
          
          ## Installation
          Download the wheel file and install with:
          ```bash
          pip install open_webui_lf-${{ needs.build-wheel.outputs.version }}-py3-none-any.whl
          ```
        draft: false
        prerelease: ${{ contains(needs.build-wheel.outputs.version, 'dev') || contains(needs.build-wheel.outputs.version, 'rc') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}